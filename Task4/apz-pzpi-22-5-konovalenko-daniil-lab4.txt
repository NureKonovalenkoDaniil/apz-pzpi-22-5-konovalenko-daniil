МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
 
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 
Кафедра «Програмна інженерія»
 
 

ЗВІТ
з лабораторної роботи 4  
з дисципліни «Архітектура програмного забезпечення»
на тему «Масштабування бекенда» 

 
 
Виконав:                                                           	Прийняв:
ст. гр. ПЗПІ-22-5                                    	    	ст. викл. Дашенков Д.С.
Коноваленко Даніїл Миколайович







Харків 2025
4 Масштабування бекенда

4.1 М	ета роботи
	В цій лабораторній роботі необхідно показати як можна масштабувати бекенд системи для роботи із великим навантаженням.

4.2 Опис стратегії масштабування системи
	Для масштабування системи MedicationManagement було використано стратегію горизонтального масштабування API-сервера.
Для демонстрації горизонтального масштабування було запущено три незалежні екземпляри API-сервера на різних портах:
•	Instance1: порт 7069
•	Instance2: порт 7079
•	Instance3: порт 7089

4.3 Опис технічних рішень
	Для балансування навантаження було використано Nginx як простий load balancer.
Було створено upstream-блок, що містить три копії API.
Вхідний трафік розподіляється через порт 8080.




4.4 Аналіз вузьких місць
Основне вузьке місце — CPU API серверів при обробці багатьох одночасних запитів.
Додатково — SQL Server при високій транзакційній активності.

4.5 Опис тестів
Було проведено серію навантажувальних тестів за допомогою NBomber.
Перший тест — один інстанс API (порт 7069).
Другий тест — через load balancer (порт 8080), три інстанси API.
Сценарій тесту:
•	Виклик GET /api/medicine
•	Навантаження: 50 паралельних копій, протягом 15 секунд

 
Рисунок 4.1 – Один інстанс API
 
Рисунок 4.2 – Три інстанси API через Nginx

Як видно з результатів, при масштабуванні API горизонтально (3 інстанси + load balancer Nginx):
•	Пропускна здатність системи значно зросла (RPS зріс на ~39%).
•	Середня затримка обробки зменшилась на ~25%, що свідчить про зниження черг на обробку запитів.
Це підтверджує, що система MedicationManagement коректно масштабується горизонтально та здатна обробляти зростаюче навантаження при збільшенні кількості екземплярів API.


3.5 Висновок
Горизонтальне масштабування за допомогою запуску декількох копій API-сервера та використання Nginx як load balancer дозволяє ефективно підвищити продуктивність системи.
Результати тестування демонструють, що система витримує підвищене навантаження при зростанні кількості API-інстансів, що підтверджує правильність обраної стратегії масштабування.

