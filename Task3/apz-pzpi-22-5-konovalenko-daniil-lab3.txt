МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
 
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ
УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
 
Кафедра «Програмна інженерія»
 
 

ЗВІТ
з лабораторної роботи 3  
з дисципліни «Архітектура програмного забезпечення»
на тему «Web застосунок» 

 
 
Виконав:                                                           	Прийняв:
ст. гр. ПЗПІ-22-5                                    	    	ст. викл. Дашенков Д.С.
Коноваленко Даніїл Миколайович







Харків 2025
3 WEB ЗАСТОСУНОК

3.1 М	ета роботи
	Розробити front-end частину програмної системи.

3.2 Опис інженерних рішень
	Для реалізації Web-застосунку системи MedicationManagement було прийнято рішення побудувати застосунок за класичною клієнт-серверною архітектурою:
•	Структура побудована за принципом Single Page Application (SPA), але спрощено: без використання складних фреймворків (React/Vue/Angular), а через класичний HTML + JS + Bootstrap.
•	В якості механізму взаємодії з серверною частиною використовується REST API.
•	Аутентифікація реалізована через JWT токен, що зберігається в LocalStorage браузера.
•	Навігація між сторінками реалізована через окремі HTML-файли:
o	login.html
o	register.html
o	dashboard.html
o	devices.html
o	conditions.html
o	logs.html
•	Для динамічного оновлення інтерфейсу використовується Vanilla JS + Fetch API.
•	Для адаптивної верстки використовується Bootstrap 5.

3.3 Опис взаємодії компонентів Web-застосунку
Ключові компоненти:
•	HTML-сторінки — основа інтерфейсу користувача.
•	JS-скрипти — логіка взаємодії з REST API:
o	auth.js
o	dashboard.js
o	devices.js
o	conditions.js
o	logs.js
•	LocalStorage — зберігання JWT токена.
•	REST API — взаємодія з серверною частиною (ASP.NET Core):
o	/api/medicine
o	/api/iotdevice
o	/api/storagecondition
o	/api/auditlog
o	/api/auth/login
o	/api/auth/register
Взаємодія:
•	Користувач авторизується через /api/auth/login — отриманий JWT токен зберігається у LocalStorage.
•	При переході на будь-яку сторінку — JS-скрипт перевіряє наявність токена і підставляє його у заголовки запитів.
•	Дані завантажуються через Fetch API → оновлюється DOM сторінки.
•	Логи та умови зберігання — автоматично оновлюються з періодичним опитуванням (setInterval).

3.4 Діаграми

 
Рисунок 3.1 - Use Case Diagram


 
Рисунок 3.2 - Component Diagram

 
Рисунок 3.3 - Package Diagram

 
Рисунок 3.4 - Activity Diagram (додавання IoT-пристрою)

3.5 Висновок
У рамках розробки Web-застосунку MedicationManagement було створено зручний та простий у використанні веб-інтерфейс для взаємодії з серверною частиною системи. Web-застосунок забезпечує повноцінну взаємодію користувача із системою MedicationManagement, є незалежним від платформи та може бути використаний як з ПК, так і з мобільних браузерів.
